{
    "openapi": "3.0.0",
    "info": {
        "title": "Allbtc Swagger UI",
        "description": "Документация OpenApi для Allbtc pool",
        "contact": {
            "email": "ognevoy.bima@gmail.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "https://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "/v1/"
        }
    ],
    "paths": {
        "/password/change/{user}": {
            "put": {
                "tags": [
                    "Auth"
                ],
                "summary": "Change user's password",
                "operationId": "f2330ec3079fdf32137febd2f6c7eafd",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "old_password",
                                    "password",
                                    "password_confirmation"
                                ],
                                "properties": {
                                    "old_password": {
                                        "description": "User's old password",
                                        "type": "string"
                                    },
                                    "password": {
                                        "description": "User's new password",
                                        "type": "string"
                                    },
                                    "password_confirmation": {
                                        "description": "Confirmation of the new password",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Password changed successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Success message",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "array",
                                            "items": {
                                                "description": "Error message(s)",
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/allowed/{token}": {
            "get": {
                "tags": [
                    "Watcher Links"
                ],
                "summary": "Get allowed routes for a watcher link",
                "parameters": [
                    {
                        "name": "token",
                        "in": "path",
                        "description": "Watcher Link Token",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "watcher_link": {
                                            "$ref": "#/components/schemas/AllowedRouteResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Watcher link not found"
                    }
                }
            }
        },
        "/chart": {
            "get": {
                "tags": [
                    "Main chart"
                ],
                "summary": "Get chart data",
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ChartResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            }
        },
        "/incomes/{sub}": {
            "get": {
                "tags": [
                    "Income"
                ],
                "summary": "Get list of incomes",
                "parameters": [
                    {
                        "name": "sub",
                        "in": "path",
                        "description": "Sub's ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "from_date",
                        "in": "query",
                        "description": "Start date for filtering incomes",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "to_date",
                        "in": "query",
                        "description": "End date for filtering incomes",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Items per page (default: 15)",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "current_page": {
                                            "type": "integer"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/IncomeCollection"
                                            }
                                        },
                                        "first_page_url": {
                                            "type": "string"
                                        },
                                        "from": {
                                            "type": "integer"
                                        },
                                        "last_page": {
                                            "type": "integer"
                                        },
                                        "last_page_url": {
                                            "type": "string"
                                        },
                                        "next_page_url": {
                                            "type": "string"
                                        },
                                        "path": {
                                            "type": "string"
                                        },
                                        "per_page": {
                                            "type": "integer"
                                        },
                                        "prev_page_url": {
                                            "type": "string"
                                        },
                                        "to": {
                                            "type": "integer"
                                        },
                                        "total": {
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Sub not found"
                    }
                }
            }
        },
        "/minerstats": {
            "get": {
                "tags": [
                    "Miner Stats"
                ],
                "summary": "Get miner statistics",
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "minerstats": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer"
                                                },
                                                "network_hashrate": {
                                                    "type": "string"
                                                },
                                                "network_unit": {
                                                    "type": "string"
                                                },
                                                "network_difficulty": {
                                                    "type": "integer"
                                                },
                                                "next_difficulty": {
                                                    "type": "integer"
                                                },
                                                "change_difficulty": {
                                                    "type": "string"
                                                },
                                                "reward_block": {
                                                    "type": "string"
                                                },
                                                "fpps_rate": {
                                                    "type": "number",
                                                    "format": "float"
                                                },
                                                "price_USD": {
                                                    "type": "integer"
                                                },
                                                "time_remain": {
                                                    "type": "integer"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    }
                }
            }
        },
        "/payouts/{sub}": {
            "get": {
                "tags": [
                    "Payouts"
                ],
                "summary": "Get list of payouts",
                "parameters": [
                    {
                        "name": "sub",
                        "in": "path",
                        "description": "Sub's ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "from_date",
                        "in": "query",
                        "description": "Start date for filtering payouts",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "to_date",
                        "in": "query",
                        "description": "End date for filtering payouts",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Items per page (default: 15)",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "current_page": {
                                            "type": "integer"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/PayoutResource"
                                            }
                                        },
                                        "first_page_url": {
                                            "type": "string"
                                        },
                                        "from": {
                                            "type": "integer"
                                        },
                                        "last_page": {
                                            "type": "integer"
                                        },
                                        "last_page_url": {
                                            "type": "string"
                                        },
                                        "next_page_url": {
                                            "type": "string"
                                        },
                                        "path": {
                                            "type": "string"
                                        },
                                        "per_page": {
                                            "type": "integer"
                                        },
                                        "prev_page_url": {
                                            "type": "string"
                                        },
                                        "to": {
                                            "type": "integer"
                                        },
                                        "total": {
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Sub not found"
                    }
                }
            }
        },
        "/referrals/incomes/{user}": {
            "get": {
                "tags": [
                    "Referral"
                ],
                "summary": "Get referral incomes list for a user",
                "parameters": [
                    {
                        "name": "user",
                        "in": "path",
                        "description": "User's ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "current_page": {
                                            "type": "integer"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "email": {
                                                        "type": "string"
                                                    },
                                                    "daily_amount": {
                                                        "type": "string"
                                                    },
                                                    "hash": {
                                                        "type": "number",
                                                        "format": "float"
                                                    },
                                                    "created_at": {
                                                        "type": "string"
                                                    },
                                                    "worker_count": {
                                                        "type": "integer"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "first_page_url": {
                                            "type": "string"
                                        },
                                        "from": {
                                            "type": "integer"
                                        },
                                        "last_page": {
                                            "type": "integer"
                                        },
                                        "last_page_url": {
                                            "type": "string"
                                        },
                                        "links": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "url": {
                                                        "type": "string"
                                                    },
                                                    "label": {
                                                        "type": "string"
                                                    },
                                                    "active": {
                                                        "type": "boolean"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "next_page_url": {
                                            "type": "string"
                                        },
                                        "path": {
                                            "type": "string"
                                        },
                                        "per_page": {
                                            "type": "integer"
                                        },
                                        "prev_page_url": {
                                            "type": "string"
                                        },
                                        "to": {
                                            "type": "integer"
                                        },
                                        "total": {
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Unprocessable Entity"
                    }
                }
            }
        },
        "/referrals/{user}": {
            "get": {
                "tags": [
                    "Referral"
                ],
                "summary": "Get referral subs for a user",
                "operationId": "df834cce778d87e0953d60ee172b9889",
                "parameters": [
                    {
                        "name": "user",
                        "in": "path",
                        "description": "User's ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "referral_subs": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/ReferralResourceCollection"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity"
                    }
                }
            }
        },
        "/referrals/statistic/{user}": {
            "get": {
                "tags": [
                    "Referral"
                ],
                "summary": "Get referral statistics for a user",
                "parameters": [
                    {
                        "name": "user",
                        "in": "path",
                        "description": "User's ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "statistic": {
                                            "$ref": "#/components/schemas/ReferralStatisticResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/statistic/{sub}": {
            "get": {
                "tags": [
                    "Subaccount"
                ],
                "summary": "Get statistics for a sub",
                "parameters": [
                    {
                        "name": "sub",
                        "in": "path",
                        "description": "Sub's ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Offset for hash rate data",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "hashes": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/HashRateResource"
                                            }
                                        },
                                        "incomes": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/IncomeCollection"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Sub not found"
                    }
                }
            }
        },
        "/subs/{user}": {
            "get": {
                "tags": [
                    "Subaccount"
                ],
                "summary": "Get list",
                "operationId": "ef5047d345d06fb5a2930762969b708d",
                "parameters": [
                    {
                        "name": "user",
                        "in": "path",
                        "description": "User's ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/SubResource"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            }
        },
        "/subs/sub/{sub}": {
            "get": {
                "tags": [
                    "Subaccount"
                ],
                "summary": "Get subaccount",
                "parameters": [
                    {
                        "name": "sub",
                        "in": "path",
                        "description": "Sub's ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SubResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            }
        },
        "/wallets/{sub}": {
            "get": {
                "tags": [
                    "Wallets"
                ],
                "summary": "Get wallets for a sub",
                "parameters": [
                    {
                        "name": "sub",
                        "in": "path",
                        "description": "Sub's ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/WalletResource"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Sub not found"
                    }
                }
            }
        },
        "/watchers/{user}/{sub}": {
            "get": {
                "tags": [
                    "Watcher Links"
                ],
                "summary": "Get watcher links for a user's sub",
                "parameters": [
                    {
                        "name": "user",
                        "in": "path",
                        "description": "User's ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "sub",
                        "in": "path",
                        "description": "Sub's ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/WatcherLinkResource"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "User or sub not found"
                    }
                }
            }
        },
        "/workers/{sub}": {
            "get": {
                "tags": [
                    "Worker"
                ],
                "summary": "Get sub's worker list",
                "parameters": [
                    {
                        "name": "sub",
                        "in": "path",
                        "description": "Sub's ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Filter workers by status (all, active, inactive)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "all",
                                "active",
                                "inactive"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "gid": {
                                                "type": "integer"
                                            },
                                            "group_name": {
                                                "type": "string"
                                            },
                                            "worker_id": {
                                                "type": "string"
                                            },
                                            "worker_name": {
                                                "type": "string"
                                            },
                                            "is_top": {
                                                "type": "boolean"
                                            },
                                            "shares_1m": {
                                                "type": "string"
                                            },
                                            "shares_5m": {
                                                "type": "string"
                                            },
                                            "shares_15m": {
                                                "type": "string"
                                            },
                                            "accept_count": {
                                                "type": "string"
                                            },
                                            "last_share_time": {
                                                "type": "integer"
                                            },
                                            "last_share_ip": {
                                                "type": "string"
                                            },
                                            "reject_percent": {
                                                "type": "string"
                                            },
                                            "first_share_time": {
                                                "type": "integer"
                                            },
                                            "miner_agent": {
                                                "type": "string"
                                            },
                                            "shares_unit": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "type": "string"
                                            },
                                            "shares_1h": {
                                                "type": "integer"
                                            },
                                            "shares_1d": {
                                                "type": "string"
                                            },
                                            "shares_1m_pure": {
                                                "type": "string"
                                            },
                                            "shares_5m_pure": {
                                                "type": "string"
                                            },
                                            "shares_15m_pure": {
                                                "type": "string"
                                            },
                                            "shares_1h_pure": {
                                                "type": "integer"
                                            },
                                            "shares_1d_pure": {
                                                "type": "integer"
                                            },
                                            "shares_1d_unit": {
                                                "type": "string"
                                            },
                                            "reject_percent_1d": {
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Sub not found"
                    }
                }
            }
        },
        "/worker/{worker}": {
            "get": {
                "tags": [
                    "Worker"
                ],
                "summary": "Get worker details",
                "parameters": [
                    {
                        "name": "worker",
                        "in": "path",
                        "description": "Worker's ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "worker_id": {
                                                    "type": "string"
                                                },
                                                "worker_name": {
                                                    "type": "string"
                                                },
                                                "shares_1m": {
                                                    "type": "string"
                                                },
                                                "shares_5m": {
                                                    "type": "string"
                                                },
                                                "shares_15m": {
                                                    "type": "string"
                                                },
                                                "accept_count": {
                                                    "type": "integer"
                                                },
                                                "accept_percent": {
                                                    "type": "integer"
                                                },
                                                "reject_percent": {
                                                    "type": "string"
                                                },
                                                "last_share_ip": {
                                                    "type": "string"
                                                },
                                                "ip2location": {
                                                    "type": "string"
                                                },
                                                "last_share_time": {
                                                    "type": "integer"
                                                },
                                                "shares_unit": {
                                                    "type": "string"
                                                },
                                                "worker_status": {
                                                    "type": "string"
                                                },
                                                "shares_1h": {
                                                    "type": "integer"
                                                },
                                                "shares_1d": {
                                                    "type": "string"
                                                },
                                                "shares_1m_pure": {
                                                    "type": "string"
                                                },
                                                "shares_5m_pure": {
                                                    "type": "string"
                                                },
                                                "shares_15m_pure": {
                                                    "type": "string"
                                                },
                                                "shares_1h_pure": {
                                                    "type": "integer"
                                                },
                                                "shares_1d_pure": {
                                                    "type": "integer"
                                                },
                                                "shares_1d_unit": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Worker not found"
                    }
                }
            }
        },
        "/workerhashrate/{worker}": {
            "get": {
                "tags": [
                    "Worker"
                ],
                "summary": "Get hash rates for a worker",
                "parameters": [
                    {
                        "name": "worker",
                        "in": "path",
                        "description": "Worker's ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Limit the number of hash rates to retrieve (default: 24)",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/WorkerHashRateResource"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Worker not found"
                    }
                }
            }
        },
        "/password/forgot": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Send password reset link by email",
                "operationId": "dd7d00be3e3a7d81bfacaef20b5cbb1f",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email"
                                ],
                                "properties": {
                                    "email": {
                                        "description": "User's email",
                                        "type": "string",
                                        "format": "email"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Password reset link sent successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Success message",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/login": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "User login",
                "operationId": "a0bad38435a32b5ad173da486ba8f59d",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "oneOf": [
                                    {
                                        "description": "User's email",
                                        "type": "string",
                                        "format": "email",
                                        "property": "email"
                                    },
                                    {
                                        "description": "User's password",
                                        "type": "string",
                                        "property": "password"
                                    },
                                    {
                                        "description": "Google Authenticator code",
                                        "type": "string",
                                        "property": "google2fa_code"
                                    }
                                ]
                            },
                            "example": {
                                "email": "user@example.com",
                                "password": "password"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful login",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "user": {
                                            "$ref": "#/components/schemas/UserResource"
                                        },
                                        "token": {
                                            "description": "User access token",
                                            "type": "string"
                                        },
                                        "expired_at": {
                                            "description": "Token expiration date",
                                            "type": "string",
                                            "format": "date-time"
                                        },
                                        "has_referral_role": {
                                            "description": "Indicates if the user has the referral role",
                                            "type": "boolean"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "array",
                                            "items": {
                                                "description": "Error message(s)",
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "array",
                                            "items": {
                                                "description": "Error message(s)",
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/logout": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "User logout",
                "operationId": "fe1c1eca634ba2811908fec5e5183950",
                "responses": {
                    "200": {
                        "description": "Successfully logged out",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "Logout confirmation message",
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/decrease/token": {
            "put": {
                "tags": [
                    "Auth"
                ],
                "summary": "Decrease the expiration time of the current token",
                "operationId": "d890f17da1689552b7634a281537ab19",
                "responses": {
                    "204": {
                        "description": "No content (Token expiration time decreased successfully)"
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/email/verify/{user}": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Resend email verification link",
                "operationId": "1f169d9c284bc9666a818c9203a7d52e",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email"
                                ],
                                "properties": {
                                    "email": {
                                        "description": "User's email address",
                                        "type": "string",
                                        "format": "email",
                                        "example": "user@example.com"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Email verification link sent successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Success message",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "description": "Validation errors",
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/password/restore/{user}": {
            "put": {
                "tags": [
                    "Auth"
                ],
                "summary": "Restore user password",
                "operationId": "32f1d997410a360dd6c53797b3bf0453",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "hash",
                                    "password"
                                ],
                                "properties": {
                                    "hash": {
                                        "description": "Hash value for email verification",
                                        "type": "string"
                                    },
                                    "password": {
                                        "description": "User's new password",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Password changed successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Success message",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Error message",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/2fac/qrcode/{user}": {
            "get": {
                "tags": [
                    "Auth"
                ],
                "summary": "Generate QR code for two-factor authentication",
                "operationId": "5ef0571bbe6220eac0159e40af3de571",
                "responses": {
                    "200": {
                        "description": "QR code and secret key generated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "qrCode": {
                                            "description": "QR code image data",
                                            "type": "string"
                                        },
                                        "secret": {
                                            "description": "Secret key for two-factor authentication",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Error message",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/2fac/enable/{user}": {
            "put": {
                "tags": [
                    "Auth"
                ],
                "summary": "Enable two-factor authentication with secret key",
                "operationId": "07e4762404b45088d9963a2c61d942f8",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "two_fa_secret"
                                ],
                                "properties": {
                                    "two_fa_secret": {
                                        "description": "Two-factor authentication secret key",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Two-factor authentication enabled successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Success message",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/2fac/disable/{user}": {
            "put": {
                "tags": [
                    "Auth"
                ],
                "summary": "Disable two-factor authentication",
                "operationId": "120760ac55eac317c0924677c2c44288",
                "responses": {
                    "200": {
                        "description": "Two-factor authentication disabled successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "description": "True if two-factor authentication was successfully disabled, otherwise false",
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "description": "Success message",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/verify/{id}/{hash}": {
            "get": {
                "tags": [
                    "Auth"
                ],
                "summary": "Verify user's email address",
                "operationId": "69d8e98256cfe536dffb8e76e01777e5",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "User ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "hash",
                        "in": "path",
                        "description": "Verification hash",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No content (Email address verified successfully)"
                    },
                    "302": {
                        "description": "Found (Redirect to the specified URL)",
                        "headers": {
                            "Location": {
                                "description": "Redirect URL",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "description": "Validation errors",
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/user/{user}": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Get user",
                "operationId": "ea7e097720d247531b4ddff682780fef",
                "parameters": [
                    {
                        "name": "user",
                        "in": "path",
                        "description": "User's ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            }
        },
        "/password/reset/verify/{id}/{hash}": {
            "get": {
                "tags": [
                    "Auth"
                ],
                "summary": "Verify password reset token",
                "operationId": "f30abdde0646bab272cea4feccded727",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "User's ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "hash",
                        "in": "path",
                        "description": "Reset token hash",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Bad request, token not exists or expired",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "description": "Error message",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "302": {
                        "description": "Token is valid, redirect to password reset page",
                        "headers": {
                            "Location": {
                                "description": "Password reset URL",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "AllowedRouteResource": {
                "properties": {
                    "allowed_routes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "type": "object"
            },
            "ChartResource": {
                "properties": {
                    "values": {
                        "type": "array",
                        "items": {
                            "properties": {
                                "x": {
                                    "type": "integer"
                                },
                                "y": {
                                    "type": "integer"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "type": "object"
            },
            "HashRateResource": {
                "properties": {
                    "hash": {
                        "type": "integer"
                    },
                    "unit": {
                        "type": "string"
                    },
                    "worker_count": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "IncomeCollection": {
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "properties": {
                                "referral_id": {
                                    "type": "integer"
                                },
                                "amount": {
                                    "type": "number"
                                },
                                "hash": {
                                    "type": "integer"
                                },
                                "status": {
                                    "type": "string"
                                },
                                "message": {
                                    "type": "string"
                                },
                                "created_at": {
                                    "type": "string"
                                },
                                "updated_at": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "type": "object"
            },
            "PayoutResource": {
                "properties": {
                    "wallet": {
                        "type": "string"
                    },
                    "payout": {
                        "type": "number",
                        "format": "float"
                    },
                    "txid": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "ReferralResourceCollection": {
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "properties": {
                                "email": {
                                    "type": "string"
                                },
                                "referral_active_workers_count": {
                                    "type": "integer"
                                },
                                "referral_inactive_workers_count": {
                                    "type": "integer"
                                },
                                "referral_hash_per_day": {
                                    "type": "number",
                                    "format": "float"
                                },
                                "total_amount": {
                                    "type": "number",
                                    "format": "float"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "type": "object"
            },
            "ReferralStatisticResource": {
                "properties": {
                    "group_id": {
                        "type": "integer"
                    },
                    "attached_referrals_count": {
                        "type": "integer"
                    },
                    "active_referrals_count": {
                        "type": "integer"
                    },
                    "referrals_total_amount": {
                        "type": "number",
                        "format": "float"
                    },
                    "code": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "SubResource": {
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "group_id": {
                        "type": "integer"
                    },
                    "workers_count_active": {
                        "type": "integer"
                    },
                    "workers_count_in_active": {
                        "type": "integer"
                    },
                    "workers_count_unstable": {
                        "type": "integer"
                    },
                    "hash_per_min": {
                        "type": "integer"
                    },
                    "hash_per_day": {
                        "type": "integer"
                    },
                    "today_forecast": {
                        "type": "integer"
                    },
                    "reject_percent": {
                        "type": "number"
                    },
                    "unit": {
                        "type": "string"
                    },
                    "total_payout": {
                        "type": "number"
                    },
                    "yesterday_amount": {
                        "type": "number"
                    },
                    "pending_amount": {
                        "type": "number"
                    }
                },
                "type": "object"
            },
            "Role": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "guard_name": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "updated_at": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "UserResource": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    },
                    "email_verified_at": {
                        "type": "string"
                    },
                    "phone": {
                        "type": "integer"
                    },
                    "sms": {
                        "type": "boolean"
                    },
                    "2fa": {
                        "type": "boolean"
                    },
                    "referral_code": {
                        "type": "string"
                    },
                    "roles": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Role"
                        }
                    }
                },
                "type": "object"
            },
            "WalletResource": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "percent": {
                        "type": "number",
                        "format": "float"
                    },
                    "minWithdrawal": {
                        "type": "number",
                        "format": "float"
                    },
                    "wallet": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "total_payout": {
                        "type": "number",
                        "format": "float"
                    },
                    "is_unlocked": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "WatcherLinkResource": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "user_id": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "allowed_routes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AllowedRouteResource"
                        }
                    },
                    "access_count": {
                        "type": "integer"
                    },
                    "url": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "WorkerHashRateResource": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "hash": {
                        "type": "number",
                        "format": "float"
                    },
                    "unit": {
                        "type": "string"
                    },
                    "worker_id": {
                        "type": "integer"
                    }
                },
                "type": "object"
            }
        }
    }
}